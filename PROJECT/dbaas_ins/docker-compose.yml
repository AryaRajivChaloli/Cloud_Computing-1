version: "2"

services:
  zoo:
    image: zookeeper
    hostname: zoo
    ports:
      - 2181:2181
    container_name: zoo
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888;2181
    restart: on-failure

  rmq:
    image: rabbitmq:3.8.3-alpine
    hostname: rmq
    container_name: rmq

  orchestrator:
    build: ./orchestrator
    command: sh -c "python3 -u orchestrator_new.py"
    environment:
      NOC: 0
    links:
      - rmq
      - zoo
    depends_on:
      - rmq
      - zoo
    container_name: orchestrator
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/local/bin/docker:/usr/local/bin/docker

    ports:
      - "80:80"
    restart: on-failure

  master:
    build: ./master
    links:
      - rmq
      - zoo
    depends_on:
      - rmq
      - zoo
    environment:
      WT: master
      NOC: 0
    container_name: master
    command: sh -c "sleep 20 && python3 -u master_new.py"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/local/bin/docker:/usr/local/bin/docker
      
  slave:
    build: ./slave
    links:
      - rmq
      - zoo
    depends_on:
      - rmq
      - zoo
    environment:
      WT: slave
      NOC: 0
    container_name: slave
    command: sh -c "sleep 30 && python3 -u slave_new.py"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/local/bin/docker:/usr/local/bin/docker
      - /home/ubuntu/CC_instance/Mycc/master/master.db:/master.db
